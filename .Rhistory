<<<<<<< HEAD
library(dplyr)
PrintInsights <- function(user.input.city, user.input.date, weather.data, tweets.data) {
city <- user.input.city
highest.temp <- summarize(weather.data, highest = max(temperature))
lowest.temp <- summarize(weather.data, lowest = min(temperature))
num.tweets <- filter(tweets.data, date == user.input.date) %>% select(number.of.tweets)
# Insights section text
insights <- paste0("In this city of ", city, " The highest temperature reached was ",
highest.temp, " degrees Farenheit. The lowest temperature reached was ",
lowest.temp, " degrees Farenheit. At this time there were about",
num.tweets, "tweets total.")
return(insights)
}
shiny::runApp('C:/Users/esham/Desktop/twitter-weather')
runApp('C:/Users/esham/Desktop/twitter-weather')
plot.3 <- plot_ly(data = data.1,
x = data.1[[y.var.1]],
y = data.2[[y.var.2]],
type = "scatter",
marker = list(size = 20,
line = list(color = 'rgba(0, 0, 0, .8)',
width = 2),
opacity = 0.7) %>%
layout(
title = title,
xaxis = list(title = y.label.1),
yaxis = list(title = y.label.2)))
BuildRenderPlots <- function(plot.1, data.1, y.var.1, plot.2, data.2, y.var.2, y.label.1, y.label.2) {
plot.3 <- plot_ly(data = data.1,
x = data.1[[y.var.1]],
y = data.2[[y.var.2]],
type = "scatter",
marker = list(size = 20,
line = list(color = 'rgba(0, 0, 0, .8)',
width = 2),
opacity = 0.7) %>%
layout(
title = title,
xaxis = list(title = y.label.1),
yaxis = list(title = y.label.2)))
return(subplot(plot.1, plot.2, plot.3))
}
BuildRenderPlots(plot.1 =  plot1, data.1 =  mtcars, y.var.1 =  "mpg", plot.2 =  plot2, data.2 =  mtcars, y.var.2 =  "hp", y.label.1 = "1", y.label.2 = "3")
BuildRenderPlots <- function(plot.1, data.1, y.var.1, plot.2, data.2, y.var.2, y.label.1, y.label.2) {
plot.3 <- plot_ly(data = data.1,
x = data.1[[y.var.1]],
y = data.2[[y.var.2]],
type = "scatter",
marker = list(size = 20,
line = list(color = 'rgba(0, 0, 0, .8)',
width = 2),
opacity = 0.7) %>%
layout(
xaxis = list(title = y.label.1),
yaxis = list(title = y.label.2)))
return(subplot(plot.1, plot.2, plot.3))
}
plot1 <- BuildBarPlot(mtcars, 'mpg', 'cyl', "1", "2", "title")
plot2 <- BuildLinePlot(mtcars, 'hp', 'drat', "hp", "drat", "else")
BuildRenderPlots(plot.1 =  plot1, data.1 =  mtcars, y.var.1 =  "mpg", plot.2 =  plot2, data.2 =  mtcars, y.var.2 =  "hp", y.label.1 = "1", y.label.2 = "3")
plot.3 <- plot_ly(data = data.1,
x = data.1[[y.var.1]],
y = data.2[[y.var.2]],
type = "scatter",
marker = list(size = 20,
line = list(color = 'rgba(0, 0, 0, .8)',
width = 2),
opacity = 0.7)) %>%
layout(
xaxis = list(title = y.label.1),
yaxis = list(title = y.label.2)))
BuildRenderPlots <- function(plot.1, data.1, y.var.1, plot.2, data.2, y.var.2, y.label.1, y.label.2) {
plot.3 <- plot_ly(data = data.1,
x = data.1[[y.var.1]],
y = data.2[[y.var.2]],
type = "scatter",
marker = list(size = 20,
line = list(color = 'rgba(0, 0, 0, .8)',
width = 2),
opacity = 0.7)) %>%
layout(
xaxis = list(title = y.label.1),
yaxis = list(title = y.label.2)))
return(subplot(plot.1, plot.2, plot.3))
}
BuildRenderPlots <- function(plot.1, data.1, y.var.1, plot.2, data.2, y.var.2, y.label.1, y.label.2) {
plot.3 <- plot_ly(data = data.1,
x = data.1[[y.var.1]],
y = data.2[[y.var.2]],
type = "scatter",
marker = list(size = 20,
line = list(color = 'rgba(0, 0, 0, .8)',
width = 2),
opacity = 0.7)) %>%
layout(
xaxis = list(title = y.label.1),
yaxis = list(title = y.label.2))
return(subplot(plot.1, plot.2, plot.3))
}
plot1 <- BuildBarPlot(mtcars, 'mpg', 'cyl', "1", "2", "title")
plot2 <- BuildLinePlot(mtcars, 'hp', 'drat', "hp", "drat", "else")
BuildRenderPlots(plot.1 =  plot1, data.1 =  mtcars, y.var.1 =  "mpg", plot.2 =  plot2, data.2 =  mtcars, y.var.2 =  "hp", y.label.1 = "1", y.label.2 = "3")
runApp('C:/Users/esham/Desktop/twitter-weather')
runApp('C:/Users/esham/Desktop/twitter-weather')
runApp('C:/Users/esham/Desktop/twitter-weather')
runApp('C:/Users/esham/Desktop/twitter-weather')
source('scripts/BuildBarChart.R')
source('scripts/BuildLineChart.R')
source('scripts/analysis.R')
source('scripts/BuildRenderedChart.R')
setwd("C:/Users/esham/Desktop/twitter-weather")
=======
shiny::runApp('UW/sp2017/INFO201/twitter-weather')
library(anytime)
library(shiny)
library(dplyr)
library(plotly)
library(httr)
library(rgeos)
library(jsonlite)
library(rgdal)
library(rtweet)
library(stringr)
runApp('UW/sp2017/INFO201/twitter-weather')
source('scripts/setup.R')
#libraries
library(anytime)
library(shiny)
library(dplyr)
library(plotly)
library(httr)
library(rgeos)
library(jsonlite)
library(rgdal)
library(rtweet)
library(stringr)
library(rjson)
library(anytime)
library(shiny)
library(dplyr)
library(plotly)
library(httr)
library(rgeos)
library(jsonlite)
library(rgdal)
library(rtweet)
library(stringr)
setwd("~/UW/sp2017/INFO201/twitter-weather")
library(dplyr)
library(anytime)
library(jsonlite)
library(rgeos)
library(rgdal)
library(rtweet)
library(shiny)
library(plotly)
library(httr)
library(stringr)
#scripts
>>>>>>> 97634b902e5a9ad72c559d386191f9605753e9af
source('scripts/setup.R')
source('scripts/BuildBarChart.R')
source('scripts/BuildLineChart.R')
source('scripts/analysis.R')
source('scripts/BuildRenderedChart.R')
<<<<<<< HEAD
runApp()
=======
lat.long.df <- geo_data %>% findLatLong(city, state)
longitude <- lat.long.df[,1]
latitude <- lat.long.df[,2]
twitter.df <- search_tweets(q = " ", geocode = paste0(latitude, ",", longitude, ",","20mi"), n = 10000,
since = start_date, until = end_date, usr = "false")
>>>>>>> 97634b902e5a9ad72c559d386191f9605753e9af
